"""Initial migartion

Revision ID: cc48e0a42f29
Revises: 
Create Date: 2025-05-13 15:08:14.649645

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'cc48e0a42f29'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blacklistedtoken',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('access_token', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('refresh_token', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('blacklisted_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_blacklistedtoken_access_token'), 'blacklistedtoken', ['access_token'], unique=True)
    op.create_index(op.f('ix_blacklistedtoken_refresh_token'), 'blacklistedtoken', ['refresh_token'], unique=True)
    op.create_table('people',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_people_email'), 'people', ['email'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_people_email'), table_name='people')
    op.drop_table('people')
    op.drop_index(op.f('ix_blacklistedtoken_refresh_token'), table_name='blacklistedtoken')
    op.drop_index(op.f('ix_blacklistedtoken_access_token'), table_name='blacklistedtoken')
    op.drop_table('blacklistedtoken')
    # ### end Alembic commands ###
